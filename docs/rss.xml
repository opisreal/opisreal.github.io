<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>躬行</title><link>https://opisreal.github.io</link><description>记录生活，分享技术</description><copyright>躬行</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://i.pinimg.com/736x/76/03/35/760335c8444835a53c293c7a30a062a0.jpg</url><title>avatar</title><link>https://opisreal.github.io</link></image><lastBuildDate>Sat, 18 Jan 2025 09:14:06 +0000</lastBuildDate><managingEditor>躬行</managingEditor><ttl>60</ttl><webMaster>躬行</webMaster><item><title>LSM-Tree 和 B-Tree 对比</title><link>https://opisreal.github.io/post/LSM-Tree%20-he-%20B-Tree%20-dui-bi.html</link><description>&lt;html&gt;
&lt;body&gt;
&lt;!--StartFragment--&gt;&lt;h3 data-relingo-block='true'&gt;LSM-Tree和B-Tree 对比&lt;/h3&gt;&lt;h4 data-relingo-block='true'&gt;&lt;strong&gt;LSM-Tree 与 B-tree 的存储与修改方式&lt;/strong&gt;&lt;/h4&gt;
&lt;table border='1'&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;特性&lt;/th&gt;
      &lt;th&gt;LSM-Tree&lt;/th&gt;
      &lt;th&gt;B-tree&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;存储结构&lt;/td&gt;
      &lt;td&gt;MemTable（内存），SSTable（磁盘）&lt;/td&gt;
      &lt;td&gt;B-tree 节点对应磁盘上的页&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;数据修改&lt;/td&gt;
      &lt;td&gt;顺序写入，新的数据生成新的 SSTable 文件，不直接修改旧文件&lt;/td&gt;
      &lt;td&gt;修改数据时直接在对应的页上进行修改&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;修改单元&lt;/td&gt;
      &lt;td&gt;顺序写入，内存中的 MemTable 或者磁盘中的 SSTable&lt;/td&gt;
      &lt;td&gt;修改操作以页为单位，页的大小通常为 4KB、8KB等&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;存储优化&lt;/td&gt;
      &lt;td&gt;合并操作（Compaction）减少小文件数量&lt;/td&gt;
      &lt;td&gt;节点分裂、合并，保持树的平衡&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;写入性能&lt;/td&gt;
      &lt;td&gt;优化写入，尤其是大量顺序写入&lt;/td&gt;
      &lt;td&gt;随机写入性能相对较差，依赖于树的高度&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;查询性能&lt;/td&gt;
      &lt;td&gt;由于多次磁盘查找，查询性能通常较差，依赖布隆过滤器优化&lt;/td&gt;
      &lt;td&gt;查询性能较好，依赖 B-tree 的平衡性&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 data-relingo-block='true'&gt;&lt;strong&gt;LSM-Tree&lt;/strong&gt;&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;p data-relingo-block='true'&gt;&lt;strong&gt;存储结构&lt;/strong&gt;：LSM-Tree 使用 &lt;strong&gt;MemTable&lt;/strong&gt; 存储内存中的数据，和磁盘上的 &lt;strong&gt;SSTable&lt;/strong&gt; 文件。</description><guid isPermaLink="true">https://opisreal.github.io/post/LSM-Tree%20-he-%20B-Tree%20-dui-bi.html</guid><pubDate>Sat, 18 Jan 2025 09:13:44 +0000</pubDate></item><item><title>second blog</title><link>https://opisreal.github.io/post/second%20blog.html</link><description># test。</description><guid isPermaLink="true">https://opisreal.github.io/post/second%20blog.html</guid><pubDate>Fri, 20 Dec 2024 12:01:41 +0000</pubDate></item><item><title>first blog</title><link>https://opisreal.github.io/post/first%20blog.html</link><description>#1。</description><guid isPermaLink="true">https://opisreal.github.io/post/first%20blog.html</guid><pubDate>Fri, 20 Dec 2024 11:40:23 +0000</pubDate></item></channel></rss>